// Mocks generated by Mockito 5.0.16 from annotations
// in wger/test/workout/workout_set_form_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;
import 'dart:ui' as _i7;

import 'package:http/http.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:wger/models/exercises/exercise.dart' as _i4;
import 'package:wger/providers/auth.dart' as _i2;
import 'package:wger/providers/exercises.dart' as _i5;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAuthProvider_0 extends _i1.Fake implements _i2.AuthProvider {}

class _FakeClient_1 extends _i1.Fake implements _i3.Client {}

class _FakeExercise_2 extends _i1.Fake implements _i4.Exercise {}

class _FakeUri_3 extends _i1.Fake implements Uri {}

class _FakeResponse_4 extends _i1.Fake implements _i3.Response {}

/// A class which mocks [ExercisesProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockExercisesProvider extends _i1.Mock implements _i5.ExercisesProvider {
  MockExercisesProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i4.Exercise> get items => (super.noSuchMethod(
    Invocation.getter(#items),
    returnValue: <_i4.Exercise>[],
  ) as List<_i4.Exercise>);
  @override
  _i2.AuthProvider get auth => (super.noSuchMethod(
    Invocation.getter(#auth),
    returnValue: _FakeAuthProvider_0(),
  ) as _i2.AuthProvider);
  @override
  set auth(_i2.AuthProvider? _auth) => super.noSuchMethod(
    Invocation.setter(#auth, _auth),
    returnValueForMissingStub: null,
  );
  @override
  _i3.Client get client => (super.noSuchMethod(
    Invocation.getter(#client),
    returnValue: _FakeClient_1(),
  ) as _i3.Client);
  @override
  set client(_i3.Client? _client) => super.noSuchMethod(
    Invocation.setter(#client, _client),
    returnValueForMissingStub: null,
  );
  @override
  bool get hasListeners =>
      (super.noSuchMethod(Invocation.getter(#hasListeners), returnValue: false)
          as bool);
  @override
  _i4.Exercise findById(int? exerciseId) => (super.noSuchMethod(
    Invocation.method(#findById, [exerciseId]),
    returnValue: _FakeExercise_2(),
  ) as _i4.Exercise);
  @override
  _i6.Future<void> fetchAndSetCategories() => (super.noSuchMethod(
    Invocation.method(#fetchAndSetCategories, []),
    returnValue: Future<void>.value(),
    returnValueForMissingStub: Future<void>.value(),
  ) as _i6.Future<void>);
  @override
  _i6.Future<void> fetchAndSetMuscles() => (super.noSuchMethod(
    Invocation.method(#fetchAndSetMuscles, []),
    returnValue: Future<void>.value(),
    returnValueForMissingStub: Future<void>.value(),
  ) as _i6.Future<void>);
  @override
  _i6.Future<void> fetchAndSetEquipment() => (super.noSuchMethod(
    Invocation.method(#fetchAndSetEquipment, []),
    returnValue: Future<void>.value(),
    returnValueForMissingStub: Future<void>.value(),
  ) as _i6.Future<void>);
  @override
  _i6.Future<_i4.Exercise> fetchAndSetExercise(int? exerciseId) =>
      (super.noSuchMethod(
        Invocation.method(#fetchAndSetExercise, [exerciseId]),
        returnValue: Future<_i4.Exercise>.value(_FakeExercise_2()),
      ) as _i6.Future<_i4.Exercise>);
  @override
  _i6.Future<void> fetchAndSetExercises() => (super.noSuchMethod(
    Invocation.method(#fetchAndSetExercises, []),
    returnValue: Future<void>.value(),
    returnValueForMissingStub: Future<void>.value(),
  ) as _i6.Future<void>);
  @override
  _i6.Future<List<dynamic>> searchExercise(
    String? name, [
    String? languageCode = r'en',
  ]) => (super.noSuchMethod(
    Invocation.method(#searchExercise, [name, languageCode]),
    returnValue: Future<List<dynamic>>.value(<dynamic>[]),
  ) as _i6.Future<List<dynamic>>);
  @override
  Uri makeUrl(
    String? path, {
    int? id,
    String? objectMethod,
    Map<String, dynamic>? query,
  }) => (super.noSuchMethod(Invocation.method(
    #makeUrl,
    [path],
    {#id: id, #objectMethod: objectMethod, #query: query},
  ), returnValue: _FakeUri_3()) as Uri);
  @override
  _i6.Future<Map<String, dynamic>> fetch(Uri? uri) => (super.noSuchMethod(
    Invocation.method(#fetch, [uri]),
    returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}),
  ) as _i6.Future<Map<String, dynamic>>);
  @override
  _i6.Future<Map<String, dynamic>> post(Map<String, dynamic>? data, Uri? uri) =>
      (super.noSuchMethod(
        Invocation.method(#post, [data, uri]),
        returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}),
      ) as _i6.Future<Map<String, dynamic>>);
  @override
  _i6.Future<Map<String, dynamic>> patch(
    Map<String, dynamic>? data,
    Uri? uri,
  ) => (super.noSuchMethod(
    Invocation.method(#patch, [data, uri]),
    returnValue: Future<Map<String, dynamic>>.value(<String, dynamic>{}),
  ) as _i6.Future<Map<String, dynamic>>);
  @override
  _i6.Future<_i3.Response> deleteRequest(String? url, int? id) =>
      (super.noSuchMethod(
        Invocation.method(#deleteRequest, [url, id]),
        returnValue: Future<_i3.Response>.value(_FakeResponse_4()),
      ) as _i6.Future<_i3.Response>);
  @override
  String toString() => super.toString();
  @override
  void addListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#addListener, [listener]),
    returnValueForMissingStub: null,
  );
  @override
  void removeListener(_i7.VoidCallback? listener) => super.noSuchMethod(
    Invocation.method(#removeListener, [listener]),
    returnValueForMissingStub: null,
  );
  @override
  void dispose() => super.noSuchMethod(
    Invocation.method(#dispose, []),
    returnValueForMissingStub: null,
  );
  @override
  void notifyListeners() => super.noSuchMethod(
    Invocation.method(#notifyListeners, []),
    returnValueForMissingStub: null,
  );
}
